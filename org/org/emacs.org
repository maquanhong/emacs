#+TITLE: emacs 笔记


* 使用el-get.el 来安装所有（几乎所有）el文件。

https://github.com/dimitri/el-get

* org-Mode
- TAB	 	折叠列表项
- M-RET	 	插入项
- M-S-RET	 	插入带复选框的项
- M-S-UP/DOWN	 	移动列表项
- M-LEFT/RIGHT	 	升/降级列表项，不包括子项
- M-S-LEFT/RIGTH	 	升/降级列表项，包括子项
- C-c C-c	 	改变复选框状态
- C-c -	 	更换列表标记（循环切换


 
| 快捷键         | 命令 | 说明                      |
|                |      |                           |
| TAB            |      | 折叠列表项                |
| M-RET          |      | 插入项                    |
| M-S-RET        |      | 插入带复选框的项          |
| M-S-UP/DOWN    |      | 移动列表项                |
| M-LEFT/RIGHT   |      | 升/降级列表项，不包括子项 |
| M-S-LEFT/RIGTH |      | 升/降级列表项，包括子项   |
| C-c C-c        |      | 改变复选框状态            |
| C-c -          |      | 更换列表标记（循环切换）  |


** 在ubuntu中。执行C-c C-e会提示Can't find library org. 此时安装emacs24-el，并重启emacs即可。

* emacs 配置 python
 可以使用jedi来替代之前到rope / ropemacs /ropemode  组合。
** 使用el-get.el 安装jedi
地址：https://github.com/davidhalter/jedi
在ubuntu中安装好需要到软件之后，直接在M-x el-get-install RET jedi即可安装成功。

在mac中。需要在系统自带的命令行中,jedi到目录中执行 make requestments 。之后在安装。 其他到基本和ubuntu一样。

** 需要用到ipython.el python-mode.el。

* emacs 启动 daemon模式
** 在windows里面没有daemon，只能M-x server-start 来启动server，之后用emacsclient 文件名来打开新文件。
** linux(ubuntu)
要使用Emacs daemon，至少需要Emacs 23。它提供了一个emacsclient程序，用于启动客户端。

有客户端就必然要有服务端。要启动一个daemon，需要在运行emacs时加入一个–daemon参数。幸运的是，我们不用手动启动服务端，而是可以利用emacsclient的-a参数。emacsclient的-a参数用于指定连接不上服务器时使用的别的编辑器（alternate editor），当把这项留空时，它会自动启动服务端。如果不想指定-a，也可以将ALTERNATE_EDITOR环境变量设为""。除了-a参数，emacsclient还要手工指定使用终端还是X来启动。要从终端启动，需要使用-t参数：
*** 终端启动
emacsclient -t -a ""
*** X启动
emacsclient -c -a ""

** MAC OS
可以通过
*** http://www.emacswiki.org/emacs/EmacsAsDaemon     &    http://kopwei.wordpress.com/2012/12/22/在mac下配置emacs-daemon和client实现瞬间启动


把下面脚本 放到 /Library/LaunchAgents 里面，名为 gnu.emacs.daemon.plist （*.plist）. 可以在mac开机的时候启动emacs daemon，之后就可以直接在命令行调用 emacsclient 来打开文件。

#+BEGIN_SRC script

 <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" 
        "http://www.apple.com/DTDs/PropertyList-1.0.dtd"> 
     <plist version="1.0">
      <dict> 
        <key>Label</key>
        <string>gnu.emacs.daemon</string>
        <key>ProgramArguments</key>
        <array>
          <string>/Applications/Emacs.app/Contents/MacOS/Emacs</string>
          <string>--daemon</string>
        </array>
       <key>RunAtLoad</key>
       <true/>
       <key>ServiceDescription</key>
       <string>Gnu Emacs Daemon</string>
       <key>UserName</key>
       <string>[YOUR USERNAME HERE]</string>
      </dict>
    </plist>

#+END_SRC


*** https://gist.github.com/redinger/1394910  没试过啦。

1. Open the AppleScript editor and paste the following:

#+BEGIN_SRC c

tell application "Terminal"
do shell script "/Applications/Emacs.app/Contents/MacOS/Emacs --daemon"
end tell

#+END_SRC
Save this as an Application called "Emacs Daemon" in your Applications folder

1. Add as a login item

Goto System Preferences > Accounts

With your user name selected, click on the Login Items tab
Click on the plus sign
Browse to your applications folder and find "Emacs Daemon"
Don't worry about the "hide" checkbox, since it the dock icon disappears naturally
Create the client application
Open the AppleScript editor and paste the following:

#+BEGIN_SRC c

tell application "Terminal"
try
set frameVisible to do shell script "/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -e '(<= 2 (length (visible-frame-list)))'"
if frameVisible is not "t" then
do shell script "/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -c -n"
end if
on error
do shell script "/Applications/Emacs.app/Contents/MacOS/Emacs --daemon"
do shell script "/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -c -n"
end try
end tell
tell application "Emacs" to activate
Save this as an Application called "Emacs Client" in your Applications folder.

#+END_SRC

1. Giving the client application a proper icon

Using the Finder, navigate to your Application folder and right click on your Emacs application (not the client or daemon), and click on Show Package Contents Do the same for the Emacs Client application

Copy the Emacs.icns file from Contents/Resources of the Emacs application to the Contents/Resources of the Emacs Client application Delete applet.icns and rename Emacs.icns to applet.icns in the Emacs Client application.

*** https://github.com/doitian/dotfiles/blob/master/bin/emacs-dwim.mac 用的是这个。虽然我看不懂这个脚本的代码。

#+BEGIN_SRC c

#!/bin/bash
# Author: Ian Yang

# recommend aliases
#
# alias e=emacs-dwim
# alias et='emacs-dwim -t'
# alias en='emacs-dwim -n'

AUTOMATOR=
# AUTOMATOR=1
#   set AUTOMATOR to 1 when used in automator as Application:
#
#   1.  Create an Application in Automator
#   2.  Add an action to run Shell
#   3.  Select "pass input as arguments".
#   4.  Paste this file into the text area, and set AUTOMATOR=1
#
#   -   You can use the Application in "Open With..." or used as default handler.
#   -   You can drag a file into this Application, and the file is opened in Emacs.
#   -   You can add this Application in "System Preference -> Accounts -> Login Items" to auto
#       start Emacs daemon.
#
EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs
EMACSCLIENT=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient

export LC_CTYPE=zh_CN.UTF-8
export LC_ALL=

_is_emacs_daemon_started () {
  netstat -nl 2> /dev/null | awk '{print $NF}' | grep -q "emacs$UID/server"
}
_is_emacs_window_exist () {
  _is_emacs_daemon_started && \
    $EMACSCLIENT -e '(<= 2 (length (visible-frame-list)))' | grep -q -x t
}

kill_emacs () {
  if _is_emacs_daemon_started; then
    $EMACSCLIENT -e -n '(let ((desktop-save '\''if-exists)) (dolist (f (cdr-safe (reverse (frame-list)))) (delete-frame f t)) (kill-emacs "yyyyyy"))'
    if _is_emacs_daemon_started; then
      ps -u $UID -o pid,comm= | grep Emacs$ | cut -d' ' -f1 | xargs -n 1 kill
    fi
  fi
  return 0
}

main () {
  if ! _is_emacs_daemon_started; then
    if $EMACS --daemon &> /tmp/emacs$UID.log; then
      echo ' [sucess]'
    else
      echo ' [faild]'
      return 1
    fi
  fi

  local cur=$(osascript -e 'path to frontmost application as Unicode text')
  if [ "$1" = "-t" ]; then
    $EMACSCLIENT "$@"
  elif [ -z "$1" ]; then
    if ! _is_emacs_window_exist; then
      $EMACSCLIENT -n -c
    fi
    osascript -e 'tell application "Emacs" to activate'
    return 0
  else
    if ! _is_emacs_window_exist; then
      $EMACSCLIENT -n -c
    fi
    if ! echo "$*" | grep -q -e '-n'; then
      osascript -e 'tell application "Emacs" to activate'
    fi
    $EMACSCLIENT "$@"
  fi
  osascript -e "tell application \"${cur}\" to activate"
}

if [ -n "$AUTOMATOR" ]; then
  [ -n "$1" ] \
    && main -n "$@" \
    || main
else
  [ -n "$1" -a "$1" = "-q" ] \
    && kill_emacs \
    || main "$@"
fi

#+END_SRC

* emacs 关闭daemon模式
1. 在emacs外部,可以使用 emacsclient -e '(kill-emacs)' 来关闭emacs daemon
1. 在emacs内部,可以使用 kill-emacs 或者 save-buffers-kill-emacs 命令。

* emacs root权限打开文件
1. Installing and configuring
    在emacs里面添加：（emacs22版本里面已经默认添加了tramp模块）
  
  ;;tramp

     (setq tramp-default-method "scp")

     (setq tramp-auto-save-directory "~/emacs/tramp")

     (setq auto-save-file-name-transforms

    '(("\\`/[^/]*:\\(.+/\\)*\\(.*\\)" "/tmp/\\2")))

    (setq tramp-chunksize 328)

    (require 'ange-ftp)

    (require 'tramp)

2. How to use
    编辑root权限的文件：C-x C-f /su:root@localhost:/ 然后输入root密码，或者C-x C-f /sudo: 输入用户的密码

    使用ftp，ssh等可以编辑远程文件，具体可以参考：

    http://blog.donews.com/pluskid/archive/2006/05/06/858306.aspx

3. Tramp和ido的冲突
    很不幸，这个和ido.el有些冲突，找了比较久也没找到一个解决方法，只好在想使用tramp的时候使用M-x ido-mode暂时关闭ido-mode。打开需要编辑的文件后就可以继续使用ido-mode了。
